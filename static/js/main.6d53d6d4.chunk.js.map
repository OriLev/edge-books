{"version":3,"sources":["components/StoreProvider.js","utils/theme.js","components/Theme/ThemeProvider.js","components/Icons/Github.js","components/Toolbar/GithubLinkButton.js","utils/browser.js","components/Toolbar/Title.js","components/Toolbar/Toolbar.js","components/Layout/Wrapper.js","components/Layout/Bar.js","components/Layout/Content.js","components/BookPage/Header.js","components/BookPage/ImgAdditionForm.js","components/BookPage/BackButton.js","utils/text.js","components/BookPage/ImagesGrid.js","consts/index.js","components/BookPage/BookPage.js","components/BookCard/BookCard.js","components/BookList/BookList.js","components/Body/Body.js","components/App.js","utils/api.js","stores/ViewStore.js","stores/RouterStore.js","stores/DataStore.js","utils/validators.js","stores/ImgAdditionStore.js","stores/AppStore.js","index.js"],"names":["StoreProvider","_ref","store","children","react_default","a","createElement","index_module","view","router","data","imgAddition","defaults","bodyColor","dark","grey","A400","light","palette","primary","blue","secondary","teal","text","getTheme","overrides","arguments","length","undefined","responsiveFontSizes","createMuiTheme","Object","assign","typography","useNextVariants","inject","observer","MuiThemeProvider","theme","type","lightThemeActive","Github","SvgIcon","d","GithubLinkButton","IconButton","color","aria-label","onClick","url","window","open","Icons_Github","withStyles","title","mixins","gutters","flex","classes","Typography","className","variant","noWrap","Fragment","Toolbar_Title","currentPage","Toolbar_GithubLinkButton","StyledWrapper","wrapper","zIndex","height","overflow","position","width","rest","objectWithoutProperties","_ref2","react_event_listener_cjs_default","target","onResize","onScreenResize","appBar","right","left","AppBar","esm_Toolbar_Toolbar","Content","disableGutters","content","toolbar","defaultProps","backgroundColor","background","default","container","padding","spacing","minHeight","display","flexDirection","justifyContent","author","Container","ImgURLInput","styled","Input","cursor","StyledForm","StyledFormControl","FormControl","maxWidth","StyledButton","Button","minWidth","marginTop","maxHeight","bookId","formState","onSubmit","e","preventDefault","addImage","error","isErrorState","InputLabel","htmlFor","id","value","imgURL","onChange","updateImgURL","FormHelperText","errorMessage","postingInProgress","CircularProgress","size","backButton","top","transitionDelay","concat","transitions","duration","leavingScreen","goBack","fab","icon","ArrowBack_default","label","Fab","replaceImg","imageId","split","slice","join","paddingBottom","gridList","subHeader","textAlign","fontSize","fontStyle","withWidth","images","GridList","cellHeight","cols","isWidthUp","GridListTile","key","style","ListSubheader","component","map","src","alt","CONSTS","API","BASE_URL","ROUTING","SINGLE_BOOK_ROUTE","MISSING_PARAMS_MSG","TOO_MANY_PARAMS_MSG","REGEX","URL_VALIDATION_REGX","RegExp","MESSAGES","INVALID_URL_MESSAGE","POST_IMAGE_FAILED","POST_IMAGE_SUCCESSFUL","NO_IMAGES_FOR_THIS_BOOK","NoImages","bookContainer","paddingTop","paddingRight","paddingLeft","marginBottom","margin","border","borderRadius","alignItems","books","book","getBookById","getBookPhotos","Paper","BookPage_BackButton","goTo","Header","getBookTitle","getBookAuthor","BookPage_ImgAdditionForm","BookPage_ImagesGrid","BookPage_NoImages","CardContent","gutterBottom","align","photos","additionalImages","PlainCard","_ref3","Card","card","BookCard_Content","MediaCard","_ref4","newImage","CardMedia","media","image","textDecoration","&:hover","borderColor","&>div","boxSizing","bottom","BookCard_MediaCard","BookCard_PlainCard","root","flexGrow","paper","listStyle","Grid","item","lg","md","xs","components_BookCard_BookCard","role","Body","_view$currentPage","name","message","state","components_BookList_BookList","components_BookPage_BookPage","getCurrentView","propTypes","PropTypes","shape","isRequired","App","components_StoreProvider","Theme_ThemeProvider","Layout_Wrapper","Layout_Bar","components_Toolbar_Toolbar","Layout_Content","components_Body_Body","fetchData","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","ok","json","abrupt","Error","t0","stop","_x","apply","this","postData","_callee2","options","_context2","method","body","JSON","stringify","mode","headers","Content-Type","_x2","_x3","postNewImage","imageURL","buildPostImageURL","attributes","uri","fecthBookList","pageNumber","bookListQuery","queryString","page[number]","page[size]","include","arrayFormat","buildBooksListURL","fetchBook","buildSingleBookURL","ViewStore","appStore","_this","classCallCheck","showHome","fromPromise","showBook","showError","updateData","autorun","setData","decorate","observable","action","RouterStore","pathname","convertRouteToState","_CONSTS$ROUTING","pageParams","_this$appStore$view","showView","legalLength","displayFunc","route","history","push","setPathname","createBrowserHistory","basename","process","forceRefresh","location","listen","DataStore","rawData","getDataCollection","normalizedData","values","getBookId","_this$getBookRelation","getBookRelationshipData","getAttributeByIdAndType","attribute","relationship","relationships","normalize","_this2","computed","ImgAdditionStore","resetImagePostingStatus","imageAdditionResponse","setTimeout","setImageAdditionResponse","postingSuccessful","resetObservables","setImageAdditionAttempted","resetFormState","newValue","imageAdditionAttempted","isImgURLIllegal","test","shouldShowURLInputError","configure","enforceActions","AppStore","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d53d6d4.chunk.js","sourcesContent":["import React from 'react';\nimport { Provider as MobxProvider } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\n// this component dictates which stores can be injected into app components\nconst StoreProvider = ({ store, children }) => (\n  <MobxProvider\n    view={store.view}\n    router={store.router}\n    data={store.data}\n    imgAddition={store.imgAddition}\n  >\n    {children}\n  </MobxProvider>\n);\n\nStoreProvider.propTypes = {\n  store: PropTypes.shape({\n    view: PropTypes.shape({}),\n    router: PropTypes.shape({}),\n    data: PropTypes.shape({}),\n  }).isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\n\nconst defaults = {\n  bodyColor: {\n    dark: grey.A400,\n    light: grey[50],\n  },\n  palette: {\n    primary: blue,\n    secondary: teal,\n    text: {\n      primary: grey[50],\n    },\n  },\n};\n\nconst getTheme = (overrides = {}) => responsiveFontSizes(createMuiTheme(\n  Object.assign(\n    {},\n    overrides,\n    defaults,\n    {\n      typography: {\n        useNextVariants: true,\n      },\n    },\n  ),\n));\n\nexport default getTheme;\n\n// setBodyColor(this.settings.bodyColor[this.settings.palette.type]);\n// this.settings.palette.type = this.settings.palette.type === 'light'\n//   ? 'dark'\n//   : 'light';\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport getTheme from '../../utils/theme';\n\nconst ThemeProvider = ({ view, children }) => (\n  <MuiThemeProvider theme={getTheme({\n    palette: {\n      type: view.lightThemeActive ? 'light' : 'dark',\n    },\n  })}\n  >\n    {children}\n  </MuiThemeProvider>\n);\n\nThemeProvider.propTypes = {\n  view: PropTypes.shape({\n    screenWidth: PropTypes.number,\n    lightThemeActive: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default inject('view')(observer(ThemeProvider));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst Github = () => (\n  <SvgIcon>\n    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n  </SvgIcon>\n);\n\nexport default Github;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Github from '../Icons/Github';\nimport { navigateTo } from '../../utils/browser';\n\nconst GithubLinkButton = () => (\n  <IconButton\n    color=\"inherit\"\n    aria-label=\"go to github\"\n    onClick={() => navigateTo('https://github.com/OriLev/edge-books')}\n  >\n    <Github />\n  </IconButton>\n);\n\nexport default GithubLinkButton;\n","export const getScreenWidth = () => window.innerWidth;\n\nexport const setBodyColor = (color) => {\n  document.body.style.background = color;\n};\n\nexport const navigateTo = (url) => {\n  window.open(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  title: Object.assign({}, theme.mixins.gutters(), {\n    flex: '1 1 auto',\n  }),\n});\n\nconst Title = ({ classes, title }) => (\n  <Typography\n    className={classes.title}\n    variant=\"h6\"\n    color=\"inherit\"\n    noWrap\n  >\n    {title}\n  </Typography>\n);\n\nTitle.propTypes = {\n  classes: PropTypes.shape({\n    screenWidth: PropTypes.number,\n    lightThemeActive: PropTypes.bool,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(Title);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport GithubLinkButton from './GithubLinkButton';\nimport Title from './Title';\n\nconst Toolbar = ({ view }) => (\n  <>\n    <Title title={view.currentPage.title} />\n    <GithubLinkButton />\n  </>\n);\n\nToolbar.propTypes = {\n  view: PropTypes.shape({}).isRequired,\n};\n\nexport default inject('view')(observer(Toolbar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport EventListener from 'react-event-listener';\n\nconst styles = () => ({\n  wrapper: {\n    zIndex: 1,\n    height: '100vh',\n    overflow: 'auto',\n    position: 'relative',\n    width: '100%',\n  },\n});\n\nconst StyledWrapper = withStyles(styles)(({ classes, ...rest }) => (\n  <div className={classes.wrapper} {...rest} />\n));\n\nconst Wrapper = ({ children, view }) => (\n  <StyledWrapper>\n    {children}\n    <EventListener target=\"window\" onResize={view.onScreenResize} />\n  </StyledWrapper>\n);\n\nWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n  view: PropTypes.shape({}).isRequired,\n};\n\nexport default inject('view')(Wrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\n\nconst styles = () => ({\n  appBar: {\n    right: 0,\n    left: 'auto',\n    position: 'absolute',\n    // [theme.breakpoints.up('md')]: {\n    //   width: `calc(100% - ${theme.drawerWidth}px)`,\n    // },\n  },\n});\n\nconst Bar = ({ classes, children }) => (\n  <MuiAppBar className={classes.appBar}>\n    <MuiToolbar>\n      {children}\n    </MuiToolbar>\n  </MuiAppBar>\n);\n\nBar.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default withStyles(styles)(Bar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  content: Object.assign({}, theme.mixins.gutters(), {\n    backgroundColor: theme.palette.background.default,\n  }),\n});\n\nconst Content = ({ classes, children, disableGutters }) => (\n  <main className={!disableGutters && classes.content}>\n    <div className={classes.toolbar} />\n    {children}\n  </main>\n);\n\nContent.defaultProps = {\n  disableGutters: false,\n};\n\nContent.propTypes = {\n  disableGutters: PropTypes.bool,\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  container: {\n    padding: theme.spacing(2),\n    minHeight: '140px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n\n});\n\nconst BookHeader = ({\n  classes, title, author,\n}) => (\n  <Container className={classes.container}>\n    <Typography variant=\"h3\" color=\"textSecondary\">{title}</Typography>\n    <Typography variant=\"body2\" color=\"textSecondary\">by</Typography>\n    <Typography variant=\"h5\" color=\"textSecondary\">{author}</Typography>\n  </Container>\n);\n\n\nBookHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BookHeader);\n","import React from 'react';\nimport { styled } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst ImgURLInput = styled(Input)({\n  color: 'black',\n  cursor: 'pointer',\n});\n\nconst StyledForm = styled('form')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: '80%',\n  minHeight: '100px',\n});\n\nconst StyledFormControl = styled(FormControl)({\n  flex: '1 0 auto',\n  maxWidth: 'calc(100% - 108px)',\n});\n\nconst StyledButton = styled(Button)({\n  minWidth: '108px',\n  marginTop: '16px',\n  minHeight: '36px',\n  maxHeight: '36px',\n});\n\nconst ImgAdditionForm = ({ bookId, imgAddition: formState }) => {\n  const handleChange = (e) => {\n    formState.updateImgURL(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    formState.addImage(bookId);\n  };\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <StyledFormControl error={formState.isErrorState}>\n        <InputLabel htmlFor=\"image-url-input\">Image URL</InputLabel>\n        <ImgURLInput\n          id=\"image-url-input\"\n          value={formState.imgURL}\n          onChange={handleChange}\n          type=\"text\"\n        />\n        {\n          formState.isErrorState\n            ? <FormHelperText id=\"component-error-text\">{formState.errorMessage}</FormHelperText>\n            : null\n        }\n      </StyledFormControl>\n      <StyledButton color=\"secondary\" type=\"submit\">\n        {\n          formState.postingInProgress\n            ? <CircularProgress size={20} />\n            : <Typography>Add Image</Typography>\n        }\n      </StyledButton>\n    </StyledForm>\n  );\n};\n\n\nImgAdditionForm.propTypes = {\n  bookId: PropTypes.string.isRequired,\n  imgAddition: PropTypes.shape({}).isRequired,\n};\n\nexport default inject('imgAddition')(observer(ImgAdditionForm));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport ArrowLeft from '@material-ui/icons/ArrowBack';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  backButton: {\n    position: 'absolute',\n    left: theme.spacing(2),\n    top: theme.spacing(2),\n    transitionDelay: `${theme.transitions.duration.leavingScreen}ms`,\n  },\n});\n\nconst BackButton = ({\n  classes, goBack,\n}) => {\n  const fab = {\n    color: 'secondary',\n    className: classes.backButton,\n    icon: <ArrowLeft />,\n    label: 'Go back to Book List',\n  };\n  return (\n    <Fab\n      aria-label={fab.label}\n      className={fab.className}\n      color={fab.color}\n      onClick={() => goBack('/')}\n      title=\"Back to Book List\"\n    >\n      {fab.icon}\n    </Fab>\n  );\n};\n\nBackButton.propTypes = {\n  goBack: PropTypes.func.isRequired,\n  classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BackButton);\n","export const capitalize = (string = '') => {\n  if (typeof string !== 'string') {\n    console.warn(`capitalize: cannot capitalize ${typeof string}`);\n    return false;\n  }\n  const result = string.charAt(0).toUpperCase() + string.slice(1);\n  return result;\n};\n\nexport default {\n  capitalize,\n};\n\nexport const replaceImg = (imgURL) => {\n  const imageId = imgURL.split('?')[1].split('').slice(0, 2).join('');\n  return `https://picsum.photos/id/${imageId}/300/400`;\n};\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n// import Typography from '@material-ui/core/Typography';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport PropTypes from 'prop-types';\nimport { replaceImg } from '../../utils/text';\n\nconst styles = theme => ({\n  container: {\n    marginTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  gridList: {\n    width: '100%',\n  },\n  subHeader: {\n    textAlign: 'left',\n    fontSize: '1.5rem',\n    fontStyle: 'italic',\n  },\n});\n\nconst ImagesGrid = ({ classes, images, width }) => {\n  const getGridListCols = () => {\n    if (isWidthUp('xl', width)) {\n      return 4;\n    }\n\n    if (isWidthUp('lg', width)) {\n      return 3;\n    }\n\n    if (isWidthUp('md', width)) {\n      return 2;\n    }\n\n    return 1;\n  };\n\n  return (\n    <Container className={classes.container}>\n      <GridList\n        cellHeight=\"auto\"\n        spacing={16}\n        className={classes.gridList}\n        cols={getGridListCols()}\n      >\n        <GridListTile key=\"Subheader\" disableGutters style={{ height: 'auto', width: '100%' }}>\n          <ListSubheader className={classes.subHeader} component=\"h4\">Images:</ListSubheader>\n          {/* <Typography className={classes.subHeader} color=\"textSecondary\"\n          variant=\"h4\" component=\"h4\">Images:</Typography> */}\n        </GridListTile>\n        {images.map(imgURL => (\n          <GridListTile key={imgURL} cols={1}>\n            <img src={replaceImg(imgURL)} alt={imgURL} />\n            {/* <img src={imgURL} alt={imgURL} /> */}\n          </GridListTile>\n        ))}\n      </GridList>\n    </Container>\n  );\n};\n\nImagesGrid.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  classes: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(withWidth()(ImagesGrid));\n","const CONSTS = {\n  API: {\n    BASE_URL: 'https://jsonapiplayground.reyesoft.com/v2',\n  },\n  ROUTING: {\n    SINGLE_BOOK_ROUTE: '/book',\n    MISSING_PARAMS_MSG: 'Illegal Route (parameters missing)',\n    TOO_MANY_PARAMS_MSG: 'Illegal Route (too many parameters)',\n  },\n  REGEX: {\n    URL_VALIDATION_REGX: new RegExp('^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$', 'i'),\n  },\n  MESSAGES: {\n    INVALID_URL_MESSAGE: 'Please insert a valid URL',\n    POST_IMAGE_FAILED: 'Adding the image failed, try again later',\n    POST_IMAGE_SUCCESSFUL: 'Image posted successfully',\n    NO_IMAGES_FOR_THIS_BOOK: 'There are no images for this book... wanna add some? :)',\n  },\n};\n\nexport default CONSTS;\n","import { observer, inject } from 'mobx-react';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Typography, Paper } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport ImgAdditionForm from './ImgAdditionForm';\nimport BackButton from './BackButton';\nimport ImagesGrid from './ImagesGrid';\n\nimport CONSTS from '../../consts';\n\nconst {\n  MESSAGES: { NO_IMAGES_FOR_THIS_BOOK },\n} = CONSTS;\n\nconst styles = theme => ({\n  bookContainer: {\n    paddingTop: theme.spacing(8),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    minWidth: '80%',\n    minHeight: '80vh',\n    margin: '10px auto auto',\n    overflow: 'auto',\n    border: 'solid 1px rgba(0, 0, 0, 0.1)',\n    borderRadius: '15px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textAlign: 'center',\n    zIndex: 50,\n  },\n});\n\nconst NoImages = () => (\n  <Container>\n    <Typography variant=\"h4\" color=\"primary\">\n      {NO_IMAGES_FOR_THIS_BOOK}\n    </Typography>\n  </Container>\n);\n\nconst BookPage = ({\n  classes, data, router, bookId,\n}) => {\n  if (data.books.length > 0) {\n    const book = data.getBookById(bookId);\n    const images = data.getBookPhotos(book);\n    return (\n      <Paper className={classes.bookContainer} component=\"div\">\n        <BackButton goBack={router.goTo} />\n        <Header title={data.getBookTitle(book)} author={data.getBookAuthor(book)} />\n        <ImgAdditionForm bookId={bookId} />\n        {\n          images.length > 0\n            ? <ImagesGrid images={images} />\n            : <NoImages />\n        }\n      </Paper>\n    );\n  }\n  return null;\n};\n\nBookPage.propTypes = {\n  bookId: PropTypes.string.isRequired,\n  data: PropTypes.shape({}).isRequired,\n  router: PropTypes.shape({}).isRequired,\n  classes: PropTypes.shape({}).isRequired,\n};\n\nexport default inject('data', 'router')(withStyles(styles)(observer(BookPage)));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nimport { replaceImg } from '../../utils/text';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 345,\n    margin: 'auto',\n    height: 400,\n    overflow: 'hidden',\n    border: 'solid 1px rgba(0, 0, 0, 0.1)',\n    borderRadius: '15px',\n    display: 'flex',\n    position: 'relative',\n    zIndex: 50,\n    textDecoration: 'none',\n    cursor: 'pointer',\n    '&:hover': {\n      borderColor: 'rgba(0, 0, 0, 0.3)',\n    },\n  },\n  media: {\n    height: 400,\n    width: '100%',\n    position: 'absolute',\n    zIndex: 100,\n    '&>div': {\n      background: 'rgba(0, 0, 0, 0.4)',\n    },\n  },\n  content: {\n    zIndex: 5,\n    width: '100%',\n    boxSizing: 'border-box',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    },\n  },\n  additionalImages: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '30px',\n    height: '30px',\n    borderRadius: '50%',\n    backgroundColor: theme.palette.grey[400],\n    position: 'absolute',\n    right: '20px',\n    bottom: '20px',\n  },\n});\n\nconst BookCard = ({ book, ...rest }) => (\n  book.photos.length > 0\n    ? <MediaCard {...rest} book={book} />\n    : <PlainCard {...rest} book={book} />\n);\n\nconst Content = ({ classes, book, variant }) => (\n  <CardContent className={classes.content}>\n    <Typography gutterBottom align=\"center\" variant=\"h5\" component=\"h5\" color={variant === 'media' ? 'textPrimary' : 'textSecondary'}>\n      {book.title}\n    </Typography>\n    <Typography gutterBottom variant=\"body1\" component=\"p\" color={variant === 'media' ? 'textPrimary' : 'textSecondary'}>\n      {book.author}\n    </Typography>\n    {\n        book.photos.length > 1\n          ? <span className={classes.additionalImages}>{`+${book.photos.length - 1}`}</span>\n          : null\n    }\n  </CardContent>\n);\n\nconst PlainCard = ({\n  classes, book, component, onClick,\n}) => (\n  <Card className={classes.card} component={component} onClick={onClick}>\n    <Content book={book} classes={classes} variant=\"plain\" />\n  </Card>\n);\n\nconst MediaCard = ({\n  classes, book, component, onClick,\n}) => {\n  const newImage = replaceImg(book.photos[0]);\n  return (\n    <Card className={classes.card} component={component} onClick={onClick}>\n      <CardMedia\n        className={classes.media}\n        image={newImage}\n        title={book.title}\n      >\n        <Content classes={classes} book={book} variant=\"media\" />\n      </CardMedia>\n    </Card>\n  );\n};\n\nBookCard.propTypes = {\n  book: PropTypes.shape({}).isRequired,\n};\n\nPlainCard.propTypes = {\n  book: PropTypes.shape({}).isRequired,\n  classes: PropTypes.shape({}).isRequired,\n  component: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nMediaCard.propTypes = {\n  book: PropTypes.shape({}).isRequired,\n  classes: PropTypes.shape({}).isRequired,\n  component: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nContent.propTypes = {\n  book: PropTypes.shape({}).isRequired,\n  classes: PropTypes.shape({}).isRequired,\n  variant: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(BookCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport BookCard from '../BookCard';\nimport CONSTS from '../../consts';\n\nconst { SINGLE_BOOK_ROUTE } = CONSTS.ROUTING;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: `${theme.spacing(2)}px`,\n    margin: 'auto',\n    maxWidth: 1300,\n  },\n  container: {\n    listStyle: 'none',\n  },\n});\n\nconst BookList = ({ data, router, classes }) => (\n  <div className={classes.root}>\n    <Paper className={classes.paper}>\n      <Grid container spacing={8} className={classes.container} component=\"ul\">\n        {data.books.map(book => (\n          <Grid key={book.id} item lg={4} md={6} xs={12} component=\"li\">\n            <BookCard book={book} component=\"a\" role=\"button\" onClick={() => router.goTo(`${SINGLE_BOOK_ROUTE}/${book.id}`)} />\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  </div>\n);\n\nBookList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  router: PropTypes.shape({}).isRequired,\n  classes: PropTypes.shape({}).isRequired,\n};\n\nexport default inject('data', 'router')(withStyles(styles)(observer(BookList)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport BookPage from '../BookPage';\nimport BookList from '../BookList';\n\n\nconst getCurrentView = (view) => {\n  const { name, data, message } = view.currentPage;\n  if (data) {\n    if (data.state === 'pending') {\n      return <span>Loading</span>;\n    }\n    if (data.state === 'rejected') {\n      return <span>Something went wrong... your data could not be fetched</span>;\n    }\n  }\n  switch (name) {\n    case 'Home':\n      return <BookList />;\n    case 'Book page':\n      return <BookPage bookId={view.currentPage.bookId} />;\n    default:\n      return <span>{message}</span>;\n  }\n};\n\nconst Body = ({ view }) => (\n  <>\n    {\n      getCurrentView(view)\n    }\n  </>\n);\n\nBody.propTypes = {\n  view: PropTypes.shape({}).isRequired,\n};\n\nexport default inject('view')(observer(Body));\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport StoreProvider from './StoreProvider';\nimport Theme from './Theme';\nimport Toolbar from './Toolbar';\nimport { Wrapper, Bar, Content } from './Layout';\nimport Body from './Body';\n\nconst App = ({ store }) => (\n  <StoreProvider store={store}>\n    <>\n      <Theme>\n        <Wrapper>\n          <Bar><Toolbar /></Bar>\n          <Content>\n            <Body />\n          </Content>\n        </Wrapper>\n      </Theme>\n    </>\n  </StoreProvider>\n);\n\nApp.propTypes = {\n  store: PropTypes.shape({}).isRequired,\n};\nexport default App;\n","import queryString from 'query-string';\n\nimport CONSTS from '../consts';\n\nconst { BASE_URL } = CONSTS.API;\n\nconst buildBooksListURL = (pageNumber) => {\n  const bookListQuery = queryString.stringify({\n    'page[number]': pageNumber,\n    'page[size]': 5,\n    include: ['author', 'photos'],\n  }, { arrayFormat: 'comma' });\n  return `${BASE_URL}/books?${bookListQuery}`;\n};\n\nconst buildSingleBookURL = (bookId) => {\n  const bookListQuery = queryString.stringify({\n    include: ['author', 'photos'],\n  }, { arrayFormat: 'comma' });\n  return `${BASE_URL}/books/${bookId}?${bookListQuery}`;\n};\n\nconst buildPostImageURL = bookId => `${BASE_URL}/books/${bookId}/relationships/photos`;\n\nconst fetchData = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return await response.json();\n    }\n    throw (new Error('Your data could not be fetched'));\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst postData = async (url, data) => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    mode: 'no-cors',\n    headers: {\n      'Content-Type': 'application/vnd.api+json',\n    },\n  };\n  try {\n    const response = await fetch(url, options);\n    if (response.ok) {\n      return await response.json();\n    }\n    throw (new Error('Your data could not be posted'));\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const postNewImage = (bookId, imageURL) => {\n  const url = buildPostImageURL(bookId);\n  const data = {\n    data: {\n      type: 'photos',\n      attributes: {\n        title: 'something',\n        uri: imageURL,\n      },\n    },\n  };\n  return postData(url, data);\n};\n\nexport const fecthBookList = (pageNumber = 1) => {\n  const url = buildBooksListURL(pageNumber);\n  return fetchData(url);\n};\n\nexport const fetchBook = (bookId) => {\n  const url = buildSingleBookURL(bookId);\n  return fetchData(url);\n};\n","import {\n  decorate, observable, action, autorun,\n} from 'mobx';\nimport { fromPromise } from 'mobx-utils';\nimport { fecthBookList, fetchBook } from '../utils/api';\n\nclass ViewStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  // OBSERVABLES................................................................\n  currentPage = {};\n\n  // ACTIONS....................................................................\n  showHome = () => {\n    this.currentPage = {\n      name: 'Home',\n      title: 'Home',\n      data: fromPromise(fecthBookList()),\n    };\n  };\n\n  showBook = (bookId) => {\n    this.currentPage = {\n      name: 'Book page',\n      bookId,\n      title: `Book #${bookId}`,\n      data: fromPromise(fetchBook(bookId)),\n    };\n  };\n\n  showError = (message = 'Something went wrong') => {\n    this.currentPage = {\n      name: 'error',\n      message,\n    };\n  };\n\n  // AUTORUNS....................................................................\n  updateData = autorun(\n    () => {\n      if (this.currentPage.data) {\n        return this.currentPage.data.state === 'fulfilled'\n          ? this.appStore.data.setData(this.currentPage.data.value)\n          : null;\n      }\n      return null;\n    },\n  )\n}\n\ndecorate(ViewStore, {\n  currentPage: observable,\n  showHome: action,\n  showBook: action,\n  showError: action,\n});\n\nexport default ViewStore;\n","import {\n  decorate, observable, action,\n} from 'mobx';\nimport { createBrowserHistory } from 'history';\nimport CONSTS from '../consts';\n\nclass RouterStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    this.history = createBrowserHistory({\n      basename: process.env.PUBLIC_URL,\n      forceRefresh: false,\n    });\n    this.setPathname(this.history.location.pathname);\n    this.history.listen((location) => {\n      this.setPathname(location.pathname);\n    });\n  }\n\n  // OBSERVABLES................................................................\n  pathname = '';\n\n  // COMPUTEDS..................................................................\n  convertRouteToState = () => {\n    const { MISSING_PARAMS_MSG, TOO_MANY_PARAMS_MSG } = CONSTS.ROUTING;\n    const pageParams = this.pathname.split('/').slice(1);\n    const { showHome, showBook, showError } = this.appStore.view;\n    const showView = (legalLength, displayFunc) => (\n      pageParams.length === legalLength\n        ? displayFunc()\n        : showError(pageParams.length < legalLength ? MISSING_PARAMS_MSG : TOO_MANY_PARAMS_MSG)\n    );\n    const page = pageParams[0];\n    switch (page) {\n      case '':\n        showView(1, () => showHome());\n        break;\n      case 'book':\n        showView(2, () => showBook(pageParams[1]));\n        break;\n      default:\n        showError('404 - route does not exist');\n    }\n  }\n\n  // ACTIONS....................................................................\n  goTo = (route = '/') => {\n    this.history.push(route);\n  }\n\n  setPathname = (pathname) => {\n    this.pathname = pathname;\n    this.convertRouteToState();\n  }\n}\n\n\ndecorate(RouterStore, {\n  pathname: observable,\n  goTo: action,\n  setPathname: action,\n  convertRouteToState: action,\n});\n\nexport default RouterStore;\n","import {\n  decorate, observable, action, computed,\n} from 'mobx';\nimport normalize from 'json-api-normalizer';\n\nclass DataStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  // OBSERVABLES................................................................\n  rawData = {};\n\n  // COMPUTEDS..................................................................\n  get normalizedData() {\n    return this.rawData ? normalize(this.rawData) : {};\n  }\n\n  get books() {\n    return this.normalizedData.books\n      ? this.getDataCollection('books')\n        .map(book => ({\n          id: this.getBookId(book),\n          title: this.getBookTitle(book),\n          author: this.getBookAuthor(book),\n          photos: this.getBookPhotos(book),\n        }))\n      : [];\n  }\n\n  // ACTIONS....................................................................\n  setData = (data) => {\n    this.rawData = data;\n  };\n\n  // HELPER METHODS.............................................................\n  getDataCollection = type => (\n    this.normalizedData[type]\n      ? Object.values(this.normalizedData[type])\n      : []\n  );\n\n  getBookById = id => this.normalizedData.books[id];\n\n  getBookId = book => book.id;\n\n  getBookTitle = book => book.attributes.title;\n\n  getBookAuthor = (book) => {\n    const { type, id } = this.getBookRelationshipData(book, 'author');\n    return this.getAttributeByIdAndType({ type, id, attribute: 'name' });\n  }\n\n  getBookPhotos = (book) => {\n    const photosData = this.getBookRelationshipData(book, 'photos');\n    return photosData.map(({ type, id }) => this.getAttributeByIdAndType({ type, id, attribute: 'uri' }));\n  }\n\n  getBookRelationshipData = (book, relationship) => book.relationships[relationship].data;\n\n  getAttributeByIdAndType = ({ type, id, attribute }) => (\n    this.normalizedData[type][id].attributes[attribute]\n  );\n}\n\ndecorate(DataStore, {\n  rawData: observable,\n  normalizedData: computed,\n  books: computed,\n  setData: action,\n});\n\nexport default DataStore;\n","import CONSTS from '../consts';\n\nconst { REGEX: { URL_VALIDATION_REGX } } = CONSTS;\n\n// export const isURL = url => URL_VALIDATION_REGX.test(url);\n\nexport default url => URL_VALIDATION_REGX.test(url);\n","import {\n  decorate, observable, action, computed, autorun,\n} from 'mobx';\nimport { fromPromise } from 'mobx-utils';\nimport isURL from '../utils/validators';\nimport { postNewImage } from '../utils/api';\n\nimport CONSTS from '../consts';\n\nconst {\n  MESSAGES: { INVALID_URL_MESSAGE, POST_IMAGE_FAILED, POST_IMAGE_SUCCESSFUL },\n} = CONSTS;\n\nclass ImgAdditionStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    this.resetFormState = autorun(\n      () => {\n        if (this.appStore.view.currentPage.name === 'Book page') {\n          this.resetObservables();\n        }\n      },\n    );\n  }\n\n  get isImgURLIllegal() {\n    return !isURL(this.imgURL);\n  }\n\n  get shouldShowURLInputError() {\n    return this.isImgURLIllegal && this.imageAdditionAttempted;\n  }\n\n  get errorMessage() {\n    if (this.isImgURLIllegal) {\n      return INVALID_URL_MESSAGE;\n    }\n    if (this.imageAdditionResponse.state === 'rejected') {\n      return POST_IMAGE_FAILED;\n    }\n    if (this.postingSuccessful) {\n      return POST_IMAGE_SUCCESSFUL;\n    }\n    return '';\n  }\n\n  get postingInProgress() {\n    return !!(this.imageAdditionResponse && this.imageAdditionResponse.state === 'pending');\n  }\n\n  get postingSuccessful() {\n    return !!(this.imageAdditionResponse && this.imageAdditionResponse.state === 'fulfilled');\n  }\n\n  get isErrorState() {\n    return this.shouldShowURLInputError || this.imageAdditionResponse.state === 'rejected';\n  }\n\n  resetImagePostingStatus = autorun(\n    () => {\n      if (this.imageAdditionResponse && this.imageAdditionResponse.state === 'rejected') {\n        setTimeout(() => this.setImageAdditionResponse({}), 300000);\n      }\n      if (this.postingSuccessful) {\n        setTimeout(() => {\n          const { id } = this.appStore.data.books[0];\n          this.resetObservables();\n          this.appStore.view.showBook(id);\n        }, 3000);\n      }\n    },\n  );\n\n\n  resetObservables = () => {\n    this.updateImgURL('');\n    this.setImageAdditionAttempted(false);\n    this.setImageAdditionResponse({});\n  }\n\n\n  // ACTIONS....................................................................\n  setImageAdditionAttempted(newValue) {\n    this.imageAdditionAttempted = newValue;\n  }\n\n  setImageAdditionResponse(newValue) {\n    this.imageAdditionResponse = newValue;\n  }\n\n  addImage(bookId) {\n    this.setImageAdditionAttempted(true);\n    if (!this.isImgURLIllegal) {\n      const response = fromPromise(postNewImage(bookId, this.imgURL));\n      this.setImageAdditionResponse(response);\n    }\n  }\n\n  updateImgURL(newValue) {\n    this.imgURL = newValue;\n  }\n}\n\ndecorate(ImgAdditionStore, {\n  imgURL: observable,\n  imageAdditionAttempted: observable,\n  imageAdditionResponse: observable,\n  isImgURLIllegal: computed,\n  errorMessage: computed,\n  shouldShowURLInputError: computed,\n  postingInProgress: computed,\n  updateImgURL: action,\n  setImageAdditionAttempted: action,\n  setImageAdditionResponse: action,\n  addImage: action,\n  resetObservables: action,\n});\n\nexport default ImgAdditionStore;\n","import { configure } from 'mobx';\n\nimport ViewStore from './ViewStore';\nimport RouterStore from './RouterStore';\nimport DataStore from './DataStore';\nimport ImgAdditionStore from './ImgAdditionStore';\n\nconfigure({ enforceActions: 'observed' });\n\nexport default class AppStore {\n  constructor() {\n    this.view = new ViewStore(this);\n    this.router = new RouterStore(this);\n    this.data = new DataStore(this);\n    this.imgAddition = new ImgAdditionStore(this);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport App from './components/App';\nimport AppStore from './stores/AppStore';\n\nconst appStore = new AppStore();\nReactDOM.render(\n  <App store={appStore} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}